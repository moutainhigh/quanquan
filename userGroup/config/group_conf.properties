#数据库配置
dbip=10.2.67.23
dbport=3306
dbuser=root
dbpwd=123456
dbname=yy_db



#Thrift 配置
maxworker=1000
minworker=50
port=9090

# App Config file ; 
#==Redis config  START==#
redis.shard.nodes=redis-1.wenaaa.com:6379,redis-2.wenaaa.com:6379,redis-3.wenaaa.com:6379
redis.incr.nodes=redis-1.wenaaa.com:6379,redis-2.wenaaa.com:6379,redis-3.wenaaa.com:6379
redis.pool.MaxTotal=10000
redis.pool.MaxIdle=300
redis.pool.MinIdle=100

#== Redis Config END ==#


# Elastic config
cluster.name=wenaaa
es_index=faq
eshosts=es-1.wenaaa.com:9300_es-2.wenaaa.com:9300_es-1.wenaaa.com:9301_es-2.wenaaa.com:9301



#zookeeper配置
SESSION_TIMEOUT=10000
CONNECTION_STRING=10.2.67.235:2181,10.2.67.236:2181,10.2.67.237:2181
#跟目录，非暂态
ZK_PATH=/root
#从节点目录
znodes=/root/znodes
#节点目录 在zookeeper中的位置，集群管理，全部为暂态
master=/root/znodes/master
#schedule1=/root/znodes/schedule1
#worker1=/root/znodes/worker1
#worker2=/root/znodes/worker2

#数据目录 非暂态
dataPath=/root/data
#主节点分发任务记录在此，所有slave监听此目录，当有数据的时候，slave读取内容  例：slave1:taskId，slave1起schedule
dataTask=/root/data/schedule
# 动态分组的节点保存在这个目录下
userGroupNode=/userGroups/alive
#schedule分配任务记录在此，worker集群监控此目录，当有数据变化时开始任务
dataworker1=/root/data/worker1
dataworker2=/root/data/worker2
#整个集群
#zookeeperGroup=schedule1:worker1,worker2;
#节点配置
#nodes=schedule1,worker1,worker2
#每个节点负载情况 
etc_slave=/root/data/etc
#节点配置
nodes=slave1,slave2,slave3

sc_zhitou.jar=com.sendtask.dctTicket.task.ScheduleDctTickExe
sc_fati.jar=com.sendtask.sendquestion.task.FatiExec
sc_usergroup.jar=com.sendtask.usergroup.zhoujia.task.WorkUserGroupExec
sc_laren.jar=com.sendtask.plpTicket.task.SchedulePlpTickExe
sc_moren.jar=com.sendtask.defTicket.task.ScheduleDefTickExe
sc_xiaoxi.jar=com.sendtask.messageTask.task.ScheduleMsgTickExe
sc_tingfa.jar=com.sendtask.otherTicket.task.OtherTaskExe

wk_zhitou.jar=com.sendtask.dctTicket.task.WorkerDctTickExe
wk_usergroup.jar=com.sendtask.usergroup.zhoujia.task.WorkUserGroupExec
wk_laren.jar=com.sendtask.plpTicket.task.WorkerPlpTickExe
wk_moren.jar=com.sendtask.defTicket.task.WorkerDefTickExe
wk_xiaoxi.jar=com.sendtask.messageTask.task.WorkerMsgTickExe